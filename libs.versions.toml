[versions]
spring-boot-version = "3.4.3"
dbscheduler-version = "14.0.2"
kotlin-version = "2.1.0"
kotlinx-serialization = "1.7.3"
springdoc-version = "2.7.0"
cryptography-version = "0.4.0"
jackson-version = "2.18.2"
spotless-version = "7.0.2"
koin-version = "4.0.2"
exposed-version = "0.60.0"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin-version" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin-version" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-version" }
google-ksp = { id = "com.google.devtools.ksp", version = "2.1.0-1.0.29" }
spring-dependencymanagement = { id = "io.spring.dependency-management", version = "1.1.7" }
spring-boot = { id = "org.springframework.boot", version.ref = "spring-boot-version" }
graalvm-buildtools = { id = "org.graalvm.buildtools.native", version = "0.10.2" }
netflix-dgs-codegen = { id = "com.netflix.dgs.codegen", version = "6.2.1" }
ktor = { id = "io.ktor.plugin", version = "3.1.1" }

[libraries]
################ gradle 插件
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin-version" }
lombok-gradle = { module = "io.freefair.gradle:lombok-plugin", version = "8.6" }
spotless-gradle = { module = "com.diffplug.spotless:spotless-plugin-gradle", version.ref = "spotless-version" }

###########################  工具:
cryptography-core = { module = "dev.whyoleg.cryptography:cryptography-core", version.ref = "cryptography-version" }
cryptography-jdk = { module = "dev.whyoleg.cryptography:cryptography-provider-jdk", version.ref = "cryptography-version" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version = "0.6.1" }
kotlinx-markdown = { module = "org.jetbrains:markdown", version = "0.7.3" }
log4j2 = { module = "org.apache.logging.log4j:log4j-core", version = "2.24.3" }
log4j2-slf4j = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version = "2.24.3" }

testcontainers = { module = "org.testcontainers:testcontainers", version = "1.20.3" }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version = "1.19.8" }

###########################  接口:
spring-data-commons = { module = "org.springframework.data:spring-data-commons", version.ref = "spring-boot-version" }
jakarta-servlet-api = { module = "jakarta.servlet:jakarta.servlet-api", version = "6.1.0" }
jakarta-validation-api = { module = "jakarta.validation:jakarta.validation-api", version = "3.1.0" }
spring-boot-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot-version" }
spring-boot-webmvc = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot-version" }

springdoc-openapi-webflux = { module = "org.springdoc:springdoc-openapi-starter-webflux-ui", version.ref = "springdoc-version" }
springdoc-openapi-webmvc = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "springdoc-version" }

jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson-version" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson-version" }
satoken-spring = { module = "cn.dev33:sa-token-reactor-spring-boot3-starter", version = "1.39.0" }
###########################  kotlin:
kotlin-reactor-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions", version = "1.2.3" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version = "1.10.1" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlinx-serialization" }

###########################  数据库:
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version = "3.2.0" }
spring-boot-jdbc = { module = "org.springframework.boot:spring-boot-starter-jdbc", version.ref = "spring-boot-version" }
liquibase-core = { module = "org.liquibase:liquibase-core" }

exposed-starter = { module = "org.jetbrains.exposed:exposed-spring-boot-starter", version.ref = "exposed-version" }
exposed-kotlin-datetime = { module = "org.jetbrains.exposed:exposed-kotlin-datetime", version.ref = "exposed-version" }

###########################  测试:
spring-boot-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot-version" }
kotlin-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher" }

###########################  ktor:
koin-ktor = { module = "io.insert-koin:koin-ktor", version.ref = "koin-version" }
koin-logger-slf4j = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin-version" }
kgraphql = { module = "com.apurebase:kgraphql", version = "0.19.0" }
kgraphql-ktor = { module = "com.apurebase:kgraphql-ktor", version = "0.19.0" }

###########################  spring:
spring-boot = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring-boot-version" }
spring-boot-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot-version" }
spring-boot-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot-version" }
spring-boot-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring-boot-version" }
spring-boot-log4j2 = { module = "org.springframework.boot:spring-boot-starter-log4j2" }
spring-boot-docker-compose = { module = "org.springframework.boot:spring-boot-docker-compose", version.ref = "spring-boot-version" }
spring-boot-autoconfigure-processor = { module = "org.springframework.boot:spring-boot-autoconfigure-processor", version.ref = "spring-boot-version" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "spring-boot-version" }

################ self
shared-api = { module = "com.github.walkin.shared:api" }
memos-boot = { module = "com.github.walkin.memos:boot" }

[bundles]
